<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
<entry key="jsNamespace" type="xstring" value="grouped_bar_chart_namespace"/>
<config key="jsCode">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="(grouped_bar_chart_namespace = function() {%%00010%%00010%%00009var barchart = {};%%00010%%00009var layoutContainer;%%00010%%00009var MIN_HEIGHT = 200, MIN_WIDTH = 300;%%00010%%00009var _representation, _value;%%00010%%00009var chart, svg;%%00010%%00009var staggerCheckbox;%%00010%%00009%%00010%%00009barchart.init = function(representation, value) {  %%00010%%00009%%00009_value = value;%%00010%%00009%%00009_representation = representation;%%00010%%00009%%00009drawChart();%%00010%%00009%%00009if (parent != undefined &amp;&amp; parent.KnimePageLoader != undefined) {%%00010%%00009%%00009%%00009parent.KnimePageLoader.autoResize(window.frameElement.id);%%00010%%00009%%00009}%%00010%%00009}%%00010%%00010%%00009function drawChart(redraw) {%%00010%%00009%%00009d3.selectAll(&quot;html, body&quot;).style(&quot;width&quot;, &quot;100%&quot;).style(&quot;height&quot;, &quot;100%&quot;).style(&quot;margin&quot;, &quot;0&quot;).style(&quot;padding&quot;, &quot;0&quot;);%%00010%%00010%%00009%%00009/*%%00010%%00009%%00009 * Process options%%00010%%00009%%00009 */%%00010%%00009%%00009var viewControls = _representation.options.enableViewControls;%%00010%%00009%%00009var optWidth = _representation.options[&quot;width&quot;];%%00010%%00009%%00009var optHeight = _representation.options[&quot;height&quot;];%%00010%%00010%%00009%%00009var optTitle = _value.options[&quot;title&quot;];%%00010%%00009%%00009var optCatLabel = _value.options[&quot;catLabel&quot;];%%00010%%00009%%00009var optFreqLabel = _value.options[&quot;freqLabel&quot;];%%00010%%00010%%00009%%00009var optStaggerLabels = _representation.options[&quot;staggerLabels&quot;];%%00010%%00009%%00009var optLegend = _representation.options[&quot;legend&quot;];%%00010%%00009%%00009var optControls = _representation.options[&quot;enableStackedEdit&quot;] &amp;&amp; viewControls;%%00010%%00010%%00009%%00009var optOrientation = _value.options[&quot;orientation&quot;];%%00009%%00010%%00010%%00009%%00009var optFullscreen = _representation.options[&quot;svg&quot;][&quot;fullscreen&quot;] &amp;&amp; _representation.runningInView;%%00010%%00009%%00009var optWidth = _representation.options[&quot;svg&quot;][&quot;width&quot;]%%00010%%00009%%00009var optHeight = _representation.options[&quot;svg&quot;][&quot;height&quot;]%%00010%%00010%%00009%%00009var optMethod = _representation.options[&quot;aggr&quot;];%%00010%%00009%%00009var optFreqCol = _representation.options[&quot;freq&quot;];%%00010%%00009%%00009var optCat = _representation.options[&quot;cat&quot;];%%00010%%00010%%00009%%00009var body = d3.select(&quot;body&quot;);%%00010%%00010%%00009%%00009var width = optWidth + &quot;px&quot;;%%00010%%00009%%00009var height = optHeight + &quot;px&quot;;%%00010%%00009%%00009if (optFullscreen) {%%00010%%00009%%00009%%00009width = height = &quot;100%&quot;;%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009var div;%%00010%%00009%%00009if (redraw) {%%00010%%00009%%00009%%00009d3.select(&quot;svg&quot;).remove();%%00010%%00009%%00009%%00009div = d3.select(&quot;#svgContainer&quot;);%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009layoutContainer = body.append(&quot;div&quot;).attr(&quot;id&quot;, &quot;layoutContainer&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;width&quot;, width).style(&quot;height&quot;, height)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-width&quot;, MIN_WIDTH + &quot;px&quot;);%%00010%%00010%%00009%%00009%%00009var controlHeight;%%00010%%00009%%00009%%00009if (_representation.options.enableViewControls) {%%00010%%00009%%00009%%00009%%00009var controlsContainer = body.append(&quot;div&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.style({bottom : &quot;0px&quot;,%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009width : &quot;100%&quot;, %%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009padding : &quot;5px&quot;, %%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009&quot;padding-left&quot; : &quot;60px&quot;,%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009&quot;border-top&quot; : &quot;1px solid black&quot;, %%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009&quot;background-color&quot; : &quot;white&quot;, %%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009&quot;box-sizing&quot;: &quot;border-box&quot;})%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;controlContainer&quot;);%%00010%%00010%%00009%%00009%%00009%%00009createControls(controlsContainer);%%00010%%00009%%00009%%00009%%00009controlHeight = controlsContainer.node().getBoundingClientRect().height;%%00010%%00009%%00009%%00009%%00009layoutContainer.style(&quot;min-height&quot;, (MIN_HEIGHT + controlHeight) + &quot;px&quot;);%%00010%%00009%%00009%%00009%%00009if (optFullscreen) {%%00010%%00009%%00009%%00009%%00009%%00009layoutContainer.style(&quot;height&quot;, &quot;calc(100% - &quot; + controlHeight + &quot;px)&quot;);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009controlHeight = 0;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009div = layoutContainer.append(&quot;div&quot;)%%00010%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;svgContainer&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-width&quot;, MIN_WIDTH + &quot;px&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-height&quot;, &quot;calc(&quot; + MIN_HEIGHT + &quot;px - &quot; + controlHeight + &quot;px&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;box-sizing&quot;, &quot;border-box&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;overflow&quot;, &quot;hidden&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;margin&quot;, &quot;0&quot;);%%00010%%00009%%00009}%%00010%%00010%%00010%%00009%%00009var svg1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010%%00009%%00009div[0][0].appendChild(svg1);%%00010%%00010%%00009%%00009svg = d3.select(&quot;svg&quot;);%%00010%%00009%%00009svg.style(&quot;font-family&quot;, &quot;sans-serif&quot;);%%00010%%00009%%00009svg.classed(&quot;colored&quot;, true);%%00010%%00010%%00009%%00009if (!optFullscreen) {%%00010%%00009%%00009%%00009if (optWidth &gt; 0) {%%00010%%00009%%00009%%00009%%00009div.style(&quot;width&quot;, optWidth+&quot;px&quot;)%%00010%%00009%%00009%%00009%%00009svg.attr(&quot;width&quot;, optWidth);%%00010%%00009%%00009%%00009%%00009// Looks like the below doesn't work,%%00010%%00009%%00009%%00009%%00009// above does work...%%00010%%00009%%00009%%00009%%00009//chart.width(optWidth);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (optHeight &gt; 0) {%%00010%%00009%%00009%%00009%%00009svg.attr(&quot;height&quot;, optHeight);%%00010%%00009%%00009%%00009%%00009div.style(&quot;height&quot;, optHeight+&quot;px&quot;);%%00010%%00009%%00009%%00009%%00009// Looks like the below doesn't work,%%00010%%00009%%00009%%00009%%00009// above does work...%%00010%%00009%%00009%%00009%%00009//chart.height(optHeight);%%00010%%00009%%00009%%00009}%%00009    %%00009%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009// Set full screen height/width%%00010%%00009%%00009%%00009div.style(&quot;width&quot;, &quot;100%&quot;);%%00010%%00009%%00009%%00009div.style(&quot;height&quot;, &quot;100%&quot;);%%00010%%00010%%00009%%00009%%00009svg.attr(&quot;width&quot;, &quot;100%&quot;);%%00010%%00009%%00009%%00009svg.attr(&quot;height&quot;, &quot;100%&quot;);%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009/* %%00010%%00009%%00009 * Process data%%00010%%00009%%00009 */%%00010    %%00009var customColors, colorScale;%%00010%%00009%%00009if (_representation.inObjects[1]) {%%00010%%00009%%00009%%00009// Custom color scale%%00010%%00009%%00009%%00009var colorTable = new kt();%%00010%%00009%%00009%%00009colorTable.setDataTable(_representation.inObjects[1]);%%00010%%00009%%00009%%00009if (colorTable.getColumnTypes()[0] == 'string') {%%00010%%00009%%00009%%00009%%00009customColors = {};%%00010%%00009%%00009%%00009%%00009var colorCol = colorTable.getColumn(0);%%00010%%00009%%00009%%00009%%00009for (var i = 0; i &lt; colorCol.length; i++) {%%00010%%00009%%00009%%00009%%00009%%00009customColors[colorCol[i]] = colorTable.getRowColors()[i];%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009colorScale = [];%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009var knimeTable = new kt();%%00010%%00009%%00009// Add the data from the input port to the knimeTable.%%00010%%00009%%00009var port0dataTable = _representation.inObjects[0];%%00010%%00009%%00009knimeTable.setDataTable(port0dataTable);%%00010%%00010%%00009%%00009var categories = knimeTable.getColumn(optCat);%%00010%%00009%%00009%%00010%%00009%%00009// Default color scale%%00010%%00009%%00009if (!customColors) {%%00010%%00009%%00009%%00009colorScale = d3.scale.category10();%%00010%%00009%%00009%%00009if (categories.length &gt; 10) {%%00010%%00009%%00009%%00009%%00009colorScale = d3.scale.category20();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009if (optMethod == &quot;Occurence\u00A0Count&quot;) {%%00010%%00009%%00009%%00009optFreqCol = [knimeTable.getColumnNames()[1]];%%00010%%00009%%00009}%%00010%%00010%%00009%%00009// Get the frequency columns%%00010%%00009%%00009var valCols = [];%%00010%%00009%%00009var hasNull = false;%%00010%%00009%%00009var isDuplicate = false;%%00010%%00009%%00009var retained = [];%%00010%%00010%%00009%%00009for (var k = 0; k &lt; optFreqCol.length; k++) {%%00010%%00009%%00009%%00009var colHasNull = false;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var valCol = knimeTable.getColumn(optFreqCol[k]);%%00010%%00009%%00009%%00009for (var j=0; j &lt; valCol.length; j++) {%%00010%%00009%%00009%%00009%%00009if (valCol[j] == null) {%%00010%%00009%%00009%%00009%%00009%%00009hasNull = true;%%00010%%00009%%00009%%00009%%00009%%00009colHasNull = true;%%00010%%00009%%00009%%00009%%00009};%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009// Add an isDuplicate test here...%%00010%%00009%%00009%%00009if ((colHasNull != true) &amp;&amp; (isDuplicate != true)) {%%00010%%00009%%00009%%00009%%00009valCols.push( valCol );%%00010%%00009%%00009%%00009%%00009retained.push(optFreqCol[k]);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009var plot_data = [];%%00010%%00009%%00009if (valCols.length &gt; 0) {%%00010%%00009%%00009%%00009var numDataPoints = valCols[0].length;%%00010%%00009%%00009%%00009for (var j = 0; j &lt; retained.length; j++) {%%00009%%00010%%00010%%00009%%00009%%00009%%00009var key = retained[j];%%00010%%00009%%00009%%00009%%00009if (optMethod == &quot;Occurence\u00A0Count&quot;) {%%00010%%00009%%00009%%00009%%00009%%00009key = &quot;Occurence Count&quot;;%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009var values = [];%%00010%%00010%%00009%%00009%%00009%%00009for (var i = 0; i &lt; numDataPoints; i++) {%%00010%%00009%%00009%%00009%%00009%%00009var dataObj = {};%%00010%%00010%%00009%%00009%%00009%%00009%%00009if (categories != undefined) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (isDuplicate == true)  {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009alert(&quot;Duplicate categories found in column.&quot;);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009return &quot;duplicate&quot;;%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (categories[i] == null) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009alert(&quot;Missing values in category column are not permitted.&quot;);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009return &quot;missing&quot;;%%00010%%00009%%00009%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009dataObj[&quot;x&quot;] = categories[i];%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009dataObj[&quot;y&quot;] = valCols[j][i];%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009/*dataObj[&quot;color&quot;] = colorScale(j);*/%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009values.push(dataObj);%%00010%%00009%%00009%%00009%%00009%%00009%%00009} %%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009var plot_stream = {&quot;key&quot;: key, &quot;values&quot;: values};%%00010%%00009%%00009%%00009%%00009plot_data[j] = plot_stream;%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009if (customColors) {%%00010%%00009%%00009%%00009%%00009%%00009var color = customColors[key];%%00010%%00009%%00009%%00009%%00009%%00009if (!color) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009color = &quot;#7C7C7C&quot;;%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009colorScale.push(color);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009if (hasNull == false) {%%00010%%00009%%00009%%00009%%00009alert(&quot;No numeric columns detected.&quot;);%%00010%%00009%%00009%%00009%%00009return &quot;numeric&quot;;%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009alert(&quot;Numeric columns detected, but contains missing values.&quot;);%%00010%%00009%%00009%%00009%%00009return &quot;missing&quot;;%%00010%%00009%%00009%%00009}%%00010%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009//console.log('td', plot_data);%%00010%%00010%%00009%%00009/*%%00010%%00009%%00009 * Plot chart%%00010%%00009%%00009 */%%00010%%00009%%00009nv.addGraph(function() {%%00010%%00009%%00009%%00009if (optOrientation) {%%00010%%00009%%00009%%00009%%00009chart = nv.models.multiBarHorizontalChart();%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009chart = nv.models.multiBarChart();%%00010%%00009%%00009%%00009%%00009chart.reduceXTicks(false);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var colorRange = customColors ? colorScale : colorScale.range();%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009chart%%00010%%00009%%00009%%00009%%00009.color(colorRange)%%00010%%00009%%00009%%00009%%00009.duration(300)%%00010%%00009%%00009%%00009%%00009.margin({right: 20, top: 60})%%00010%%00009%%00009%%00009%%00009.groupSpacing(0.1);%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009updateTitles(false);%%00010%%00010%%00009        chart.showControls(_representation.runningInView &amp;&amp; optControls);%%00010%%00009%%00009%%00009chart.showLegend(optLegend);%%00010%%00010%%00009%%00009%%00009updateAxisLabels(false);%%00010%%00010%%00009%%00009%%00009svg.datum(plot_data)%%00010%%00009%%00009%%00009%%00009.transition().duration(300)%%00010%%00009%%00009%%00009%%00009.call(chart);%%00010%%00009%%00009%%00009nv.utils.windowResize(chart.update);%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009return chart;%%00010%%00009%%00009});%%00009%%00010%%00009}%%00010%%00009%%00010%%00009function updateTitles(updateChart) {%%00010%%00009%%00009if (chart) {%%00010%%00009%%00009%%00009var curTitle = d3.select(&quot;#title&quot;);%%00010%%00009%%00009%%00009var curSubtitle = d3.select(&quot;#subtitle&quot;);%%00010%%00009%%00009%%00009var chartNeedsUpdating = curTitle.empty() != !(_value.options.title) %%00010%%00009%%00009%%00009%%00009|| curSubtitle.empty() != !(_value.options.subtitle);%%00010%%00009%%00009%%00009if (!_value.options.title) {%%00010%%00009%%00009%%00009%%00009curTitle.remove();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (_value.options.title) {%%00010%%00009%%00009%%00009%%00009if (curTitle.empty()) {%%00010%%00009%%00009%%00009%%00009%%00009svg.append(&quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;x&quot;, 20)             %%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;y&quot;, 30)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;font-size&quot;, 24)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;title&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.text(_value.options.title);%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009curTitle.text(_value.options.title);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!_value.options.subtitle) {%%00010%%00009%%00009%%00009%%00009curSubtitle.remove();%%00010%%00009%%00009%%00009} %%00010%%00009%%00009%%00009if (_value.options.subtitle) {%%00010%%00009%%00009%%00009%%00009if (curSubtitle.empty()) {%%00010%%00009%%00009%%00009%%00009%%00009svg.append(&quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;x&quot;, 20)             %%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;y&quot;, _value.options.title ? 46 : 20)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;font-size&quot;, 12)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;subtitle&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.text(_value.options.subtitle);%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009curSubtitle.text(_value.options.subtitle)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;y&quot;, _value.options.title ? 46 : 20);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var topMargin = 10;%%00010%%00009%%00009%%00009topMargin += _value.options.title ? 10 : 0;%%00010%%00009%%00009%%00009topMargin += _value.options.subtitle ? 8 : 0;%%00010%%00009%%00009%%00009chart.legend.margin({top: topMargin, bottom: topMargin});%%00010%%00009%%00009%%00009chart.controls.margin({top: topMargin, bottom: topMargin});%%00010%%00009%%00009%%00009if (updateChart &amp;&amp; chartNeedsUpdating) {%%00010%%00009%%00009%%00009%%00009chart.update();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009}%%00010%%00009%%00010%%00009function updateAxisLabels(updateChart) {%%00010%%00009%%00009if (chart) {%%00010%%00009%%00009%%00009var optOrientation = _value.options[&quot;orientation&quot;];%%00010%%00009%%00009%%00009var optStaggerLabels = _value.options[&quot;staggerLabels&quot;];%%00010%%00009%%00009%%00009var curCatAxisLabel, curFreqAxisLabel;%%00010%%00009%%00009%%00009var curCatAxisLabelElement = d3.select(&quot;.nv-x.nv-axis .nv-axis-label&quot;);%%00010%%00009%%00009%%00009var curFreqAxisLabelElement = d3.select(&quot;.nv-y.nv-axis .nv-axis-label&quot;);%%00010%%00009%%00009%%00009if (!curCatAxisLabelElement.empty()) {%%00010%%00009%%00009%%00009%%00009curCatAxisLabel = curCatAxisLabelElement.text();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!curFreqAxisLabelElement.empty()) {%%00010%%00009%%00009%%00009%%00009curFreqAxisLabel = curCatAxisLabelElement.text();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009var chartNeedsUpdating = curCatAxisLabel != _value.options.catLabel%%00010%%00009%%00009%%00009%%00009|| curFreqAxisLabel != _value.options.freqLabel;%%00010%%00009%%00009%%00009if (!chartNeedsUpdating) return;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009chart.xAxis%%00010%%00009%%00009%%00009%%00009.axisLabel(_value.options.catLabel)%%00010%%00009%%00009%%00009%%00009.axisLabelDistance(optOrientation ? 30 : optStaggerLabels ? 10 : -5)%%00010%%00009%%00009%%00009%%00009.showMaxMin(false);%%00010%%00010%%00009%%00009%%00009// tick format needed?%%00010%%00009%%00009%%00009chart.yAxis%%00010%%00009%%00009%%00009%%00009.axisLabel(_value.options.freqLabel)%%00010%%00009%%00009%%00009%%00009.axisLabelDistance(optOrientation ? -5 : 0)%%00010%%00009%%00009%%00009%%00009/*.tickFormat(d3.format(',.01f'))*/;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var leftMargin = optOrientation ? 100 : 70;%%00010%%00009%%00009%%00009var bottomMargin = 35;%%00010%%00009%%00009%%00009if (!_value.options.catLabel) {%%00010%%00009%%00009%%00009%%00009bottomMargin = optOrientation ? bottomMargin : 25;%%00010%%00009%%00009%%00009%%00009leftMargin = optOrientation ? 70 : leftMargin;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!_value.options.freqLabel) {%%00010%%00009%%00009%%00009%%00009bottomMargin = optOrientation ? 25 : bottomMargin;%%00010%%00009%%00009%%00009%%00009leftMargin = optOrientation ? leftMargin : 50;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!optOrientation) {%%00010%%00009%%00009%%00009%%00009chart.staggerLabels(optStaggerLabels);%%00010%%00009%%00009%%00009%%00009if (optStaggerLabels) {%%00010%%00009%%00009%%00009%%00009%%00009bottomMargin += _value.options.catLabel ? 25 : 15;%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009chart.margin({left: leftMargin, bottom: bottomMargin})%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (updateChart) {%%00010%%00009%%00009%%00009%%00009chart.update();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009}%%00010%%00010%%00009function createControls(controlsContainer) {%%00010%%00009%%00009if (_representation.options.enableViewControls) {%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009/*.style(&quot;width&quot;, &quot;100%&quot;)*/%%00010%%00009%%00009%%00009var controlTable = controlsContainer.append(&quot;table&quot;)%%00010%%00009    %%00009%%00009.attr(&quot;id&quot;, &quot;barControls&quot;)%%00010%%00009    %%00009%%00009.style(&quot;padding&quot;, &quot;10px&quot;)%%00010%%00009    %%00009%%00009.style(&quot;margin&quot;, &quot;0 auto&quot;)%%00010%%00009    %%00009%%00009.style(&quot;box-sizing&quot;, &quot;border-box&quot;)%%00010%%00009    %%00009%%00009.style(&quot;font-family&quot;, &quot;sans-serif&quot;)%%00010%%00009    %%00009%%00009.style(&quot;font-size&quot;, &quot;12px&quot;)%%00010%%00009    %%00009%%00009.style(&quot;border-spacing&quot;, 0)%%00010%%00009    %%00009%%00009.style(&quot;border-collapse&quot;, &quot;collapse&quot;);%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var orientationEdit = _representation.options.enableHorizontalToggle;%%00010%%00009%%00009%%00009var staggerLabels = _representation.options.enableStaggerToggle;%%00010%%00009%%00009%%00009var categoryEdit = _representation.options.enableCategoryChooser;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (orientationEdit || staggerLabels) {%%00010%%00009%%00009%%00009%%00009var orientationContainer = controlTable.append(&quot;tr&quot;);%%00010%%00009%%00009%%00009%%00009if (orientationEdit) {%%00010%%00009%%00009%%00009%%00009%%00009orientationContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;orientation&quot;).text(&quot;Plot horizontal bar chart:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009    %%00009%%00009var orientationCheckbox = orientationContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;checkbox&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;orientation&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.property(&quot;checked&quot;, _value.options.orientation)%%00010%%00009    %%00009%%00009%%00009%%00009.on(&quot;click&quot;, function() {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009if (_value.options[&quot;orientation&quot;] != this.checked) {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009_value.options[&quot;orientation&quot;] = this.checked;%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009d3.select(&quot;#stagger&quot;).property(&quot;disabled&quot;, this.checked);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009drawChart(true);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009if (staggerLabels) {%%00010%%00009%%00009%%00009%%00009%%00009orientationContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;stagger&quot;).text(&quot;Stagger labels:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009    %%00009%%00009var staggerCheckbox = orientationContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;checkbox&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;stagger&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.property(&quot;checked&quot;, _value.options.staggerLabels)%%00010%%00009    %%00009%%00009%%00009%%00009.property(&quot;disabled&quot;, _value.options[&quot;orientation&quot;])%%00010%%00009    %%00009%%00009%%00009%%00009.on(&quot;click&quot;, function() {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009if (_value.options.staggerLabels != this.checked) {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009_value.options.staggerLabels = this.checked;%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009drawChart(true);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009/*if (categoryEdit) {%%00010%%00009%%00009%%00009%%00009%%00009orientationContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;cat&quot;).text(&quot;Category Column:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009%%00009%%00009%%00009var categoryBox = orientationContainer.append(&quot;td&quot;).append(&quot;select&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;cat&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.style(&quot;width&quot;, &quot;150px&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;);%%00010%%00009%%00009%%00009%%00009%%00009var COLUMNS = _representation.inObjects[0].spec.colNames;%%00010%%00009%%00009%%00009%%00009%%00009var COLTYPES = _representation.inObjects[0].spec.colTypes;%%00010%%00009%%00009%%00009%%00009%%00009for (var i = 0; i &lt; COLUMNS.length; i++) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (COLTYPES[i] == &quot;string&quot;) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009var interp = COLUMNS[i];%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009var o = categoryBox.append(&quot;option&quot;).text(interp).attr(&quot;value&quot;, interp);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009if (interp === _representation.options.cat) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009o.property(&quot;selected&quot;, true);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009categoryBox.on(&quot;change&quot;, function() {%%00010%%00009%%00009%%00009%%00009%%00009%%00009var orig = _value.options.cat;%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.cat = categoryBox.property(&quot;value&quot;);%%00010%%00009%%00009%%00009%%00009%%00009%%00009var res = drawChart(true);%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (res == &quot;missing&quot;) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009_representation.options.cat = orig;%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009drawChart(true);%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009}*/%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var titleEdit = _representation.options.enableTitleEdit;%%00010%%00009%%00009%%00009var subtitleEdit = _representation.options.enableSubtitleEdit;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (titleEdit || subtitleEdit) {%%00010%%00009%%00009%%00009%%00009var titleEditContainer = controlTable.append(&quot;tr&quot;);%%00010%%00009%%00009    %%00009if (titleEdit) {%%00010%%00009%%00009    %%00009%%00009titleEditContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;chartTitleText&quot;).text(&quot;Chart Title:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009    %%00009%%00009var chartTitleText = titleEditContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;text&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;chartTitleText&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;name&quot;, &quot;chartTitleText&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;value&quot;, _value.options.title)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;font-family&quot;, &quot;sans-serif&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;font-size&quot;, &quot;12px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;width&quot;, &quot;150px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.on(&quot;keyup&quot;, function() {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009if (_value.options.title != this.value) {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009_value.options.title = this.value;%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009updateTitles(true);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009});%%00010%%00009%%00009    %%00009}%%00010%%00009%%00009    %%00009if (subtitleEdit) {%%00010%%00009%%00009    %%00009%%00009titleEditContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;chartSubtitleText&quot;).text(&quot;Chart Subtitle:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009    %%00009%%00009var chartTitleText = titleEditContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;text&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;chartSubtitleText&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;name&quot;, &quot;chartSubtitleText&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.attr(&quot;value&quot;, _value.options.subtitle)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;font-family&quot;, &quot;sans-serif&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;font-size&quot;, &quot;12px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;width&quot;, &quot;150px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009    %%00009%%00009%%00009%%00009.on(&quot;keyup&quot;, function() {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009if (_value.options.subtitle != this.value) {%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009_value.options.subtitle = this.value;%%00010%%00009    %%00009%%00009%%00009%%00009%%00009%%00009updateTitles(true);%%00010%%00009    %%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009%%00009});%%00010%%00009%%00009    %%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (_representation.options.enableAxisEdit) {%%00010%%00009%%00009%%00009%%00009var axisContainer = controlTable.append(&quot;tr&quot;);%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009axisContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;catAxisLabel&quot;).text(&quot;Category axis label:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009%%00009%%00009var categoryBox = axisContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;catAxisLabel&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;value&quot;, _value.options.catLabel)%%00010%%00009%%00009%%00009%%00009%%00009.style(&quot;width&quot;, &quot;150px&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.on(&quot;keyup&quot;, function() {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.catLabel = this.value;%%00010%%00009%%00009%%00009%%00009%%00009%%00009updateAxisLabels(true);%%00010%%00009%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009axisContainer.append(&quot;td&quot;).append(&quot;label&quot;).attr(&quot;for&quot;, &quot;freqAxisLabel&quot;).text(&quot;Frequency axis label:&quot;).style(&quot;margin&quot;, &quot;0 5px&quot;);%%00010%%00009%%00009%%00009%%00009var categoryBox = axisContainer.append(&quot;td&quot;).append(&quot;input&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;freqAxisLabel&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;type&quot;, &quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;value&quot;, _value.options.freqLabel)%%00010%%00009%%00009%%00009%%00009%%00009.style(&quot;width&quot;, &quot;150px&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.style(&quot;margin-right&quot;, &quot;15px&quot;)%%00010%%00009%%00009%%00009%%00009%%00009.on(&quot;keyup&quot;, function() {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.freqLabel = this.value;%%00010%%00009%%00009%%00009%%00009%%00009%%00009updateAxisLabels(true);%%00010%%00009%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (d3.selectAll(&quot;#controlContainer table *&quot;).empty()) {%%00010%%00009%%00009%%00009%%00009controlContainer.remove();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009}%%00010%%00010%%00009barchart.validate = function() {%%00010%%00009%%00009return true;%%00010%%00009}%%00010%%00010%%00009barchart.getComponentValue = function() {%%00010%%00009%%00009return _value;%%00010%%00009}%%00010%%00010%%00009barchart.getSVG = function() {%%00010%%00009%%00009// inline global style declarations for SVG export%%00010%%00009%%00009var styles = document.styleSheets;%%00010%%00009%%00009for (i = 0; i &lt; styles.length; i++) {%%00010%%00009%%00009%%00009if (!styles[i].cssRules &amp;&amp; styles[i].rules) {%%00010%%00009%%00009%%00009%%00009styles[i].cssRules = styles[i].rules;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009// empty style declaration%%00010%%00009%%00009%%00009if (!styles[i].cssRules) continue;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009for (var j = 0; j &lt; styles[i].cssRules.length; j++) {%%00010%%00009%%00009%%00009%%00009var rule = styles[i].cssRules[j];%%00010%%00009%%00009%%00009%%00009d3.selectAll(rule.selectorText).each(function(){%%00010%%00009%%00009%%00009%%00009%%00009for (var k = 0; k &lt; rule.style.length; k++) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009var curStyle = this.style.getPropertyValue(rule.style[k]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009var curPrio = this.style.getPropertyPriority(rule.style[k]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009var rulePrio = rule.style.getPropertyPriority(rule.style[k]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009//only overwrite style if not set or priority is overruled%%00010%%00009%%00009%%00009%%00009%%00009%%00009if (!curStyle || (curPrio != &quot;important&quot; &amp;&amp; rulePrio == &quot;important&quot;)) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009d3.select(this).style(rule.style[k], rule.style[rule.style[k]]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009var svgElement = d3.select(&quot;svg&quot;)[0][0];%%00010%%00009%%00009// Return the SVG as a string.%%00010%%00009%%00009return (new XMLSerializer()).serializeToString(svgElement);%%00010%%00009}%%00010%%00010%%00009return barchart;%%00010%%00010}());"/>
</config>
<config key="cssCode">
<entry key="array-size" type="xint" value="2"/>
<entry key="0" type="xstring" value=".nvd3 .nv-axis{pointer-events:none;opacity:1}.nvd3 .nv-axis path{fill:none;stroke:#000;stroke-opacity:.75;shape-rendering:crispEdges}.nvd3 .nv-axis path.domain{stroke-opacity:.75}.nvd3 .nv-axis.nv-x path.domain{stroke-opacity:0}.nvd3 .nv-axis line{fill:none;stroke:#e5e5e5;shape-rendering:crispEdges}.nvd3 .nv-axis .zero line,.nvd3 .nv-axis line.zero{stroke-opacity:.75}.nvd3 .nv-axis .nv-axisMaxMin text{font-weight:700}.nvd3 .x .nv-axis .nv-axisMaxMin text,.nvd3 .x2 .nv-axis .nv-axisMaxMin text,.nvd3 .x3 .nv-axis .nv-axisMaxMin text{text-anchor:middle}.nvd3 .nv-axis.nv-disabled{opacity:0}.nvd3 .nv-bars rect{fill-opacity:.75;transition:fill-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear}.nvd3 .nv-bars rect.hover{fill-opacity:1}.nvd3 .nv-bars .hover rect{fill:#add8e6}.nvd3 .nv-bars text{fill:rgba(0,0,0,0)}.nvd3 .nv-bars .hover text{fill:rgba(0,0,0,1)}.nvd3 .nv-multibar .nv-groups rect,.nvd3 .nv-multibarHorizontal .nv-groups rect,.nvd3 .nv-discretebar .nv-groups rect{stroke-opacity:0;transition:fill-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear}.nvd3 .nv-multibar .nv-groups rect:hover,.nvd3 .nv-multibarHorizontal .nv-groups rect:hover,.nvd3 .nv-candlestickBar .nv-ticks rect:hover,.nvd3 .nv-discretebar .nv-groups rect:hover{fill-opacity:1}.nvd3 .nv-discretebar .nv-groups text,.nvd3 .nv-multibarHorizontal .nv-groups text{font-weight:700;fill:rgba(0,0,0,1);stroke:rgba(0,0,0,0)}.nvd3 .nv-boxplot circle{fill-opacity:.5}.nvd3 .nv-boxplot circle:hover{fill-opacity:1}.nvd3 .nv-boxplot rect:hover{fill-opacity:1}.nvd3 line.nv-boxplot-median{stroke:#000}.nv-boxplot-tick:hover{stroke-width:2.5px}.nvd3.nv-bullet{font:10px sans-serif}.nvd3.nv-bullet .nv-measure{fill-opacity:.8}.nvd3.nv-bullet .nv-measure:hover{fill-opacity:1}.nvd3.nv-bullet .nv-marker{stroke:#000;stroke-width:2px}.nvd3.nv-bullet .nv-markerTriangle{stroke:#000;fill:#fff;stroke-width:1.5px}.nvd3.nv-bullet .nv-tick line{stroke:#666;stroke-width:.5px}.nvd3.nv-bullet .nv-range.nv-s0{fill:#eee}.nvd3.nv-bullet .nv-range.nv-s1{fill:#ddd}.nvd3.nv-bullet .nv-range.nv-s2{fill:#ccc}.nvd3.nv-bullet .nv-title{font-size:14px;font-weight:700}.nvd3.nv-bullet .nv-subtitle{fill:#999}.nvd3.nv-bullet .nv-range{fill:#bababa;fill-opacity:.4}.nvd3.nv-bullet .nv-range:hover{fill-opacity:.7}.nvd3.nv-candlestickBar .nv-ticks .nv-tick{stroke-width:1px}.nvd3.nv-candlestickBar .nv-ticks .nv-tick.hover{stroke-width:2px}.nvd3.nv-candlestickBar .nv-ticks .nv-tick.positive rect{stroke:#2ca02c;fill:#2ca02c}.nvd3.nv-candlestickBar .nv-ticks .nv-tick.negative rect{stroke:#d62728;fill:#d62728}.with-transitions .nv-candlestickBar .nv-ticks .nv-tick{transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-candlestickBar .nv-ticks line{stroke:#333}.nvd3 .nv-legend .nv-disabled rect{}.nvd3 .nv-check-box .nv-box{fill-opacity:0;stroke-width:2}.nvd3 .nv-check-box .nv-check{fill-opacity:0;stroke-width:4}.nvd3 .nv-series.nv-disabled .nv-check-box .nv-check{fill-opacity:0;stroke-opacity:0}.nvd3 .nv-controlsWrap .nv-legend .nv-check-box .nv-check{opacity:0}.nvd3.nv-linePlusBar .nv-bar rect{fill-opacity:.75}.nvd3.nv-linePlusBar .nv-bar rect:hover{fill-opacity:1}.nvd3 .nv-groups path.nv-line{fill:none}.nvd3 .nv-groups path.nv-area{stroke:none}.nvd3.nv-line .nvd3.nv-scatter .nv-groups .nv-point{fill-opacity:0;stroke-opacity:0}.nvd3.nv-scatter.nv-single-point .nv-groups .nv-point{fill-opacity:.5!important;stroke-opacity:.5!important}.with-transitions .nvd3 .nv-groups .nv-point{transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-scatter .nv-groups .nv-point.hover,.nvd3 .nv-groups .nv-point.hover{stroke-width:7px;fill-opacity:.95!important;stroke-opacity:.95!important}.nvd3 .nv-point-paths path{stroke:#aaa;stroke-opacity:0;fill:#eee;fill-opacity:0}.nvd3 .nv-indexLine{cursor:ew-resize}svg.nvd3-svg{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-ms-user-select:none;-moz-user-select:none;user-select:none;display:block;width:100%;height:100%}.nvtooltip.with-3d-shadow,.with-3d-shadow .nvtooltip{-moz-box-shadow:0 5px 10px rgba(0,0,0,.2);-webkit-box-shadow:0 5px 10px rgba(0,0,0,.2);box-shadow:0 5px 10px rgba(0,0,0,.2);-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.nvd3 text{font:400 12px Arial}.nvd3 .title{font:700 14px Arial}.nvd3 .nv-background{fill:#fff;fill-opacity:0}.nvd3.nv-noData{font-size:18px;font-weight:700}.nv-brush .extent{fill-opacity:.125;shape-rendering:crispEdges}.nv-brush .resize path{fill:#eee;stroke:#666}.nvd3 .nv-legend .nv-series{cursor:pointer}.nvd3 .nv-legend .nv-disabled circle{fill-opacity:0}.nvd3 .nv-brush .extent{fill-opacity:0!important}.nvd3 .nv-brushBackground rect{stroke:#000;stroke-width:.4;fill:#fff;fill-opacity:.7}.nvd3.nv-ohlcBar .nv-ticks .nv-tick{stroke-width:1px}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.hover{stroke-width:2px}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.positive{stroke:#2ca02c}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.negative{stroke:#d62728}.nvd3 .background path{fill:none;stroke:#EEE;stroke-opacity:.4;shape-rendering:crispEdges}.nvd3 .foreground path{fill:none;stroke-opacity:.7}.nvd3 .nv-parallelCoordinates-brush .extent{fill:#fff;fill-opacity:.6;stroke:gray;shape-rendering:crispEdges}.nvd3 .nv-parallelCoordinates .hover{fill-opacity:1;stroke-width:3px}.nvd3 .missingValuesline line{fill:none;stroke:#000;stroke-width:1;stroke-opacity:1;stroke-dasharray:5,5}.nvd3.nv-pie path{stroke-opacity:0;transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-pie .nv-pie-title{font-size:24px;fill:rgba(19,196,249,.59)}.nvd3.nv-pie .nv-slice text{stroke:#000;stroke-width:0}.nvd3.nv-pie path{stroke:#fff;stroke-width:1px;stroke-opacity:1}.nvd3.nv-pie .hover path{fill-opacity:.7}.nvd3.nv-pie .nv-label{pointer-events:none}.nvd3.nv-pie .nv-label rect{fill-opacity:0;stroke-opacity:0}.nvd3 .nv-groups .nv-point.hover{stroke-width:20px;stroke-opacity:.5}.nvd3 .nv-scatter .nv-point.hover{fill-opacity:1}.nv-noninteractive{pointer-events:none}.nv-distx,.nv-disty{pointer-events:none}.nvd3.nv-sparkline path{fill:none}.nvd3.nv-sparklineplus g.nv-hoverValue{pointer-events:none}.nvd3.nv-sparklineplus .nv-hoverValue line{stroke:#333;stroke-width:1.5px}.nvd3.nv-sparklineplus,.nvd3.nv-sparklineplus g{pointer-events:all}.nvd3 .nv-hoverArea{fill-opacity:0;stroke-opacity:0}.nvd3.nv-sparklineplus .nv-xValue,.nvd3.nv-sparklineplus .nv-yValue{stroke-width:0;font-size:.9em;font-weight:400}.nvd3.nv-sparklineplus .nv-yValue{stroke:#f66}.nvd3.nv-sparklineplus .nv-maxValue{stroke:#2ca02c;fill:#2ca02c}.nvd3.nv-sparklineplus .nv-minValue{stroke:#d62728;fill:#d62728}.nvd3.nv-sparklineplus .nv-currentValue{font-weight:700;font-size:1.1em}.nvd3.nv-stackedarea path.nv-area{fill-opacity:.7;stroke-opacity:0;transition:fill-opacity 250ms linear,stroke-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear,stroke-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-stackedarea path.nv-area.hover{fill-opacity:.9}.nvd3.nv-stackedarea .nv-groups .nv-point{stroke-opacity:0;fill-opacity:0}.nvtooltip{position:absolute;background-color:rgba(255,255,255,1);color:rgba(0,0,0,1);padding:1px;border:1px solid rgba(0,0,0,.2);z-index:10000;display:block;font-family:Arial;font-size:13px;text-align:left;pointer-events:none;white-space:nowrap;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.nvtooltip{background:rgba(255,255,255,.8);border:1px solid rgba(0,0,0,.5);border-radius:4px}.nvtooltip.with-transitions,.with-transitions .nvtooltip{transition:opacity 50ms linear;-moz-transition:opacity 50ms linear;-webkit-transition:opacity 50ms linear;transition-delay:200ms;-moz-transition-delay:200ms;-webkit-transition-delay:200ms}.nvtooltip.x-nvtooltip,.nvtooltip.y-nvtooltip{padding:8px}.nvtooltip h3{margin:0;padding:4px 14px;line-height:18px;font-weight:400;background-color:rgba(247,247,247,.75);color:rgba(0,0,0,1);text-align:center;border-bottom:1px solid #ebebeb;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0}.nvtooltip p{margin:0;padding:5px 14px;text-align:center}.nvtooltip span{display:inline-block;margin:2px 0}.nvtooltip table{margin:6px;border-spacing:0}.nvtooltip table td{padding:2px 9px 2px 0;vertical-align:middle}.nvtooltip table td.key{font-weight:400}.nvtooltip table td.value{text-align:right;font-weight:700}.nvtooltip table tr.highlight td{padding:1px 9px 1px 0;border-bottom-style:solid;border-bottom-width:1px;border-top-style:solid;border-top-width:1px}.nvtooltip table td.legend-color-guide div{width:8px;height:8px;vertical-align:middle}.nvtooltip table td.legend-color-guide div{width:12px;height:12px;border:1px solid #999}.nvtooltip .footer{padding:3px;text-align:center}.nvtooltip-pending-removal{pointer-events:none;display:none}.nvd3 .nv-interactiveGuideLine{pointer-events:none}.nvd3 line.nv-guideline{stroke:#ccc}"/>
<entry key="1" type="xstring" value="/* make sure colors on bars are correct (inherit from group) */%%00010svg.colored .nvd3 .nv-multibar .nv-groups rect, %%00010svg.colored .nvd3 .nv-multibarHorizontal .nv-groups rect, %%00010svg.colored .nvd3 .nv-discretebar .nv-groups rect {%%00010%%00009fill: inherit !important;%%00010%%00009stroke: inherit !important;%%00010}"/>
</config>
<config key="jsDependencies">
<entry key="numSettings" type="xint" value="2"/>
<config key="dependency_0">
<entry key="name" type="xstring" value="nvd3"/>
<entry key="path" type="xstring" value="js-lib/nvd3/nv.d3.v1_8_1.js"/>
<entry key="usesDefine" type="xboolean" value="false"/>
<entry key="exports" type="xstring" value="nv"/>
<config key="dependencies">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="D3_3.5.5_Debug"/>
</config>
<entry key="local" type="xboolean" value="true"/>
</config>
<config key="dependency_1">
<entry key="name" type="xstring" value="D3_3.5.5_Debug"/>
<entry key="path" type="xstring" value="js-lib/d3/d3.v3_5_5.js"/>
<entry key="usesDefine" type="xboolean" value="false"/>
<entry key="exports" type="xstring" isnull="true" value=""/>
<config key="dependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="local" type="xboolean" value="true"/>
</config>
</config>
<config key="cssDependencies">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="js-lib/nvd3/nv.d3.v1_8_1.css"/>
</config>
<entry key="new" type="xboolean" value="false"/>
<entry key="inView" type="xboolean" value="true"/>
<config key="variables">
<entry key="numSettings" type="xint" value="1"/>
<entry key="mapClass" type="xstring" value="string"/>
<entry key="key_0" type="xstring" value="knime.workspace"/>
<entry key="class_0" type="xstring" value="java.lang.String"/>
<entry key="value_0" type="xstring" value="/home/vagrant/knime-workspace"/>
</config>
<config key="binaryFiles">
<entry key="numSettings" type="xint" value="0"/>
<entry key="mapClass" type="xstring" value="string"/>
</config>
<config key="options">
<entry key="numSettings" type="xint" value="12"/>
<entry key="mapClass" type="xstring" value="object"/>
<entry key="key_0" type="xstring" value="enableStackedEdit"/>
<entry key="class_0" type="xstring" value="java.lang.Boolean"/>
<entry key="value_0" type="xboolean" value="true"/>
<entry key="key_1" type="xstring" value="enableAxisEdit"/>
<entry key="class_1" type="xstring" value="java.lang.Boolean"/>
<entry key="value_1" type="xboolean" value="true"/>
<entry key="key_2" type="xstring" value="svg"/>
<entry key="class_2" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
<config key="value_2">
<entry key="width" type="xint" value="600"/>
<entry key="height" type="xint" value="400"/>
<entry key="fullscreen" type="xboolean" value="true"/>
</config>
<entry key="key_3" type="xstring" value="legend"/>
<entry key="class_3" type="xstring" value="java.lang.Boolean"/>
<entry key="value_3" type="xboolean" value="false"/>
<entry key="key_4" type="xstring" value="enableHorizontalToggle"/>
<entry key="class_4" type="xstring" value="java.lang.Boolean"/>
<entry key="value_4" type="xboolean" value="true"/>
<entry key="key_5" type="xstring" value="cat"/>
<entry key="class_5" type="xstring" value="java.lang.String"/>
<entry key="value_5" type="xstring" value="First(uniprot_name)"/>
<entry key="key_6" type="xstring" value="freq"/>
<entry key="class_6" type="xstring" value="[Ljava.lang.String;"/>
<config key="value_6">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="Count (First(uniprot_name))"/>
</config>
<entry key="key_7" type="xstring" value="enableTitleEdit"/>
<entry key="class_7" type="xstring" value="java.lang.Boolean"/>
<entry key="value_7" type="xboolean" value="true"/>
<entry key="key_8" type="xstring" value="enableStaggerToggle"/>
<entry key="class_8" type="xstring" value="java.lang.Boolean"/>
<entry key="value_8" type="xboolean" value="true"/>
<entry key="key_9" type="xstring" value="enableViewControls"/>
<entry key="class_9" type="xstring" value="java.lang.Boolean"/>
<entry key="value_9" type="xboolean" value="true"/>
<entry key="key_10" type="xstring" value="aggr"/>
<entry key="class_10" type="xstring" value="java.lang.String"/>
<entry key="value_10" type="xstring" value="Sum"/>
<entry key="key_11" type="xstring" value="enableSubtitleEdit"/>
<entry key="class_11" type="xstring" value="java.lang.Boolean"/>
<entry key="value_11" type="xboolean" value="true"/>
</config>
<config key="inObjects">
<entry key="numSettings" type="xint" value="2"/>
<config key="inObject_0">
<entry key="knimeDataTableJSON" type="xstring" value="{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;possibleValues&quot;:[[&quot;Beta-secretase 1&quot;,&quot;Alpha-mannosidase 2&quot;,&quot;Acetylcholinesterase&quot;,&quot;Methionine aminopeptidase 2&quot;,&quot;Thymidylate synthase&quot;,&quot;Renin&quot;,&quot;Baculoviral IAP repeat-containing protein 2&quot;,&quot;Leukotriene A-4 hydrolase&quot;,&quot;Adenosine deaminase&quot;,&quot;Xylose isomerase&quot;,&quot;Phenylethanolamine N-methyltransferase&quot;,&quot;5'-methylthioadenosine/S-adenosylhomocysteine nucleosidase&quot;],null],&quot;numColumns&quot;:2,&quot;numRows&quot;:12,&quot;colNames&quot;:[&quot;First(uniprot_name)&quot;,&quot;Count (First(uniprot_name))&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;minValues&quot;:[&quot;5'-methylthioadenosine/S-adenosylhomocysteine nucleosidase&quot;,5.0],&quot;maxValues&quot;:[&quot;Xylose isomerase&quot;,21.0],&quot;numExtensions&quot;:0,&quot;extensionTypes&quot;:[],&quot;extensionNames&quot;:[]},&quot;rows&quot;:[{&quot;data&quot;:[&quot;Beta-secretase 1&quot;,21.0],&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;data&quot;:[&quot;Alpha-mannosidase 2&quot;,13.0],&quot;rowKey&quot;:&quot;Row3&quot;},{&quot;data&quot;:[&quot;Acetylcholinesterase&quot;,11.0],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;Methionine aminopeptidase 2&quot;,9.0],&quot;rowKey&quot;:&quot;Row7&quot;},{&quot;data&quot;:[&quot;Thymidylate synthase&quot;,8.0],&quot;rowKey&quot;:&quot;Row10&quot;},{&quot;data&quot;:[&quot;Renin&quot;,7.0],&quot;rowKey&quot;:&quot;Row9&quot;},{&quot;data&quot;:[&quot;Baculoviral IAP repeat-containing protein 2&quot;,7.0],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;Leukotriene A-4 hydrolase&quot;,6.0],&quot;rowKey&quot;:&quot;Row6&quot;},{&quot;data&quot;:[&quot;Adenosine deaminase&quot;,5.0],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;Xylose isomerase&quot;,5.0],&quot;rowKey&quot;:&quot;Row11&quot;},{&quot;data&quot;:[&quot;Phenylethanolamine N-methyltransferase&quot;,5.0],&quot;rowKey&quot;:&quot;Row8&quot;},{&quot;data&quot;:[&quot;5'-methylthioadenosine/S-adenosylhomocysteine nucleosidase&quot;,5.0],&quot;rowKey&quot;:&quot;Row0&quot;}],&quot;extensions&quot;:null}"/>
</config>
<config key="inObject_1">
<entry key="knimeDataTableJSON" type="xstring" value="{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;possibleValues&quot;:[[&quot;Beta-secretase 1&quot;,&quot;Alpha-mannosidase 2&quot;,&quot;Acetylcholinesterase&quot;,&quot;Methionine aminopeptidase 2&quot;,&quot;Thymidylate synthase&quot;,&quot;Renin&quot;,&quot;Baculoviral IAP repeat-containing protein 2&quot;,&quot;Leukotriene A-4 hydrolase&quot;,&quot;Adenosine deaminase&quot;,&quot;Xylose isomerase&quot;,&quot;Phenylethanolamine N-methyltransferase&quot;,&quot;5'-methylthioadenosine/S-adenosylhomocysteine nucleosidase&quot;],null],&quot;numColumns&quot;:2,&quot;numRows&quot;:12,&quot;colNames&quot;:[&quot;First(uniprot_name)&quot;,&quot;Count (First(uniprot_name))&quot;],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;minValues&quot;:[&quot;5'-methylthioadenosine/S-adenosylhomocysteine nucleosidase&quot;,5.0],&quot;maxValues&quot;:[&quot;Xylose isomerase&quot;,21.0],&quot;numExtensions&quot;:0,&quot;extensionTypes&quot;:[],&quot;extensionNames&quot;:[]},&quot;rows&quot;:[{&quot;data&quot;:[&quot;Beta-secretase 1&quot;,21.0],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;Alpha-mannosidase 2&quot;,13.0],&quot;rowKey&quot;:&quot;Row1&quot;},{&quot;data&quot;:[&quot;Acetylcholinesterase&quot;,11.0],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;Methionine aminopeptidase 2&quot;,9.0],&quot;rowKey&quot;:&quot;Row3&quot;},{&quot;data&quot;:[&quot;Thymidylate synthase&quot;,8.0],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;Renin&quot;,7.0],&quot;rowKey&quot;:&quot;Row5&quot;},{&quot;data&quot;:[&quot;Baculoviral IAP repeat-containing protein 2&quot;,7.0],&quot;rowKey&quot;:&quot;Row6&quot;},{&quot;data&quot;:[&quot;Leukotriene A-4 hydrolase&quot;,6.0],&quot;rowKey&quot;:&quot;Row7&quot;},{&quot;data&quot;:[&quot;Adenosine deaminase&quot;,5.0],&quot;rowKey&quot;:&quot;Row8&quot;},{&quot;data&quot;:[&quot;Xylose isomerase&quot;,5.0],&quot;rowKey&quot;:&quot;Row9&quot;},{&quot;data&quot;:[&quot;Phenylethanolamine N-methyltransferase&quot;,5.0],&quot;rowKey&quot;:&quot;Row10&quot;},{&quot;data&quot;:[&quot;5'-methylthioadenosine/S-adenosylhomocysteine nucleosidase&quot;,5.0],&quot;rowKey&quot;:&quot;Row11&quot;}],&quot;extensions&quot;:null}"/>
</config>
</config>
</config>
